FROM rocky8-init

# PostgreSQL 설치
RUN dnf install -y postgresql14-server postgresql14-contrib postgresql14-plpython3 postgresql14-plperl postgresql14-devel
RUN dnf install -y pg_hint_plan_14
RUN dnf install -y pg_show_plans_14
RUN ( git clone --depth 1 --branch 1.8.0.1 https://github.com/experdb/pg_store_plans.git && cd pg_store_plans && USE_PGXS=1 PATH=/usr/pgsql-14/bin:${PATH} make install && cd .. && rm -rf pg_store_plans )
RUN ( git clone --depth 1 --branch v1.1.0 https://github.com/pgsentinel/pgsentinel.git && cd pgsentinel/src && PATH=/usr/pgsql-14/bin:${PATH} make install && cd ../.. && rm -rf pgsentinel )
RUN ( git clone --depth 1 --branch 1.0.0 https://github.com/experdb/pg_ensure_queryid.git && cd pg_ensure_queryid && PATH=/usr/pgsql-14/bin:${PATH} make install && cd ../.. && rm -rf pg_ensure_queryid )

# PostgreSQL 데이터베이스 초기화
RUN echo -e '# Docker connections:\nhost    all             all             172.0.0.0/8             @authmethodhost@\nhost    replication     all             172.0.0.0/8             @authmethodhost@' >> /usr/pgsql-14/share/pg_hba.conf.sample
RUN su -l postgres -c "/usr/pgsql-14/bin/initdb --pgdata=/var/lib/pgsql/14/data -A scram-sha-256 --auth-local=peer"
COPY --chown=postgres:postgres --chmod=600 files/postgresql.auto.conf /var/lib/pgsql/14/data/postgresql.auto.conf
COPY --chown=root:root --chmod=644 files/role.sql files/extension.sql /
RUN su -l postgres -c "/usr/pgsql-14/bin/postgres --single -D /var/lib/pgsql/14/data" < /role.sql && rm -f /role.sql
RUN su -l postgres -c "/usr/pgsql-14/bin/postgres --single -D /var/lib/pgsql/14/data experdb" < /extension.sql && rm -f /extension.sql
RUN systemctl enable postgresql-14

# 사용자 환경 설정
RUN echo 'postgres	ALL=(ALL)	NOPASSWD: ALL' > /etc/sudoers.d/postgres
RUN chmod 440 /etc/sudoers.d/postgres
COPY --chown=postgres:postgres --chmod=644 rocky/files/pgsql_profile /var/lib/pgsql/.bash_profile
ADD files/ssh.tar.gz /var/lib/pgsql/.ssh
RUN touch /var/lib/pgsql/.hushlogin && chown -R postgres:postgres /var/lib/pgsql/.hushlogin /var/lib/pgsql/.ssh && chmod 644 /var/lib/pgsql/.hushlogin && chmod 700 /var/lib/pgsql/.ssh
RUN echo -e '\nPATH=/usr/pgsql-14/bin:${PATH}' >> /root/.bashrc
COPY --chown=postgres:postgres --chmod=755 files/initialize.sh /var/lib/pgsql
RUN su -l postgres -c "echo '@reboot /var/lib/pgsql/initialize.sh >/tmp/initialize.log 2>&1' | crontab"

# Docker 환경 설정
ENV PATH=/var/lib/pgsql/.local/bin:/usr/pgsql-14/bin:${PATH}
ENV PGDATA=/var/lib/pgsql/14/data PGHOST=localhost PGUSER=experdba PGPASSWORD=experdba PGDATABASE=experdb

# Workspace 설정
ENV GIT_CONFIG_GLOBAL=/var/lib/pgsql/workspace/.gitconfig
COPY --chown=postgres:postgres --chmod=644 rocky/files/pgsql_bashrc /var/lib/pgsql/.bashrc
RUN mkdir /var/lib/pgsql/.vscode-server && mkdir /var/lib/pgsql/workspace && mkdir /var/lib/pgsql/workspace/.vscode && mkdir /var/lib/pgsql/workspace/postgres && mkdir /var/lib/pgsql/workspace/pg_store_plans && mkdir /var/lib/pgsql/workspace/pgsentinel && mkdir /var/lib/pgsql/workspace/pg_ensure_queryid
COPY --chown=postgres:postgres --chmod=644 rocky/files/gitconfig /var/lib/pgsql/workspace/.gitconfig
COPY --chown=postgres:postgres --chmod=644 files/gitignore /var/lib/pgsql/workspace/.gitignore
COPY --chown=postgres:postgres --chmod=644 rocky/files/launch-pg14.json /var/lib/pgsql/workspace/.vscode/launch.json
RUN ( cd /var/lib/pgsql/workspace/postgres && git init && git remote add origin https://github.com/assam258-5892/postgres.git && git remote add upstream https://github.com/postgres/postgres.git )
RUN ( cd /var/lib/pgsql/workspace/pg_store_plans && git init && git remote add origin https://github.com/experdb/pg_store_plans.git && git remote add upstream https://github.com/ossc-db/pg_store_plans.git )
RUN ( cd /var/lib/pgsql/workspace/pgsentinel && git init && git remote add origin https://github.com/experdb/pgsentinel.git && git remote add upstream https://github.com/pgsentinel/pgsentinel.git )
RUN ( cd /var/lib/pgsql/workspace/pg_ensure_queryid && git init && git remote add origin https://github.com/assam258-5892/pg_ensure_queryid.git && git remote add upstream https://github.com/experdb/pg_ensure_queryid.git )
RUN chown -R postgres:postgres /var/lib/pgsql/.vscode-server /var/lib/pgsql/workspace
VOLUME /var/lib/pgsql/workspace
