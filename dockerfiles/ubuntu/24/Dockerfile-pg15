FROM ubuntu24-init

# PostgreSQL 설치
RUN apt install -y postgresql-15 postgresql-contrib-15 postgresql-plpython3-15 postgresql-plperl-15 postgresql-server-dev-15
RUN apt install -y postgresql-15-pg-hint-plan
RUN apt install -y postgresql-15-show-plans
RUN ( git clone --depth 1 --branch 1.7 https://github.com/ossc-db/pg_store_plans.git && cd pg_store_plans && USE_PGXS=1 PATH=/usr/lib/postgresql/15/bin:${PATH} make install && cd .. && rm -rf pg_store_plans )
RUN ( git clone --depth 1 --branch v1.1.0 https://github.com/pgsentinel/pgsentinel.git && cd pgsentinel/src && PATH=/usr/lib/postgresql/15/bin:${PATH} make install && cd ../.. && rm -rf pgsentinel )
RUN ( git clone --depth 1 --branch 1.0.0 https://github.com/experdb/pg_ensure_queryid.git && cd pg_ensure_queryid && PATH=/usr/postgresql/15/bin:${PATH} make install && cd ../.. && rm -rf pg_ensure_queryid )

# PostgreSQL 데이터베이스 초기화
RUN echo '# Docker connections:\nhost    all             all             172.0.0.0/8             scram-sha-256\nhost    replication     all             172.0.0.0/8             scram-sha-256' >> /etc/postgresql/15/main/pg_hba.conf
COPY --chown=postgres:postgres --chmod=600 files/postgresql.auto.conf /var/lib/postgresql/15/main/postgresql.auto.conf
COPY --chown=root:root --chmod=644 files/role.sql files/extension.sql /
RUN su -l postgres -c "/usr/lib/postgresql/15/bin/postgres --single -D /var/lib/postgresql/15/main -c config_file=/etc/postgresql/15/main/postgresql.conf" < /role.sql && rm -f /role.sql
RUN su -l postgres -c "/usr/lib/postgresql/15/bin/postgres --single -D /var/lib/postgresql/15/main -c config_file=/etc/postgresql/15/main/postgresql.conf experdb" < /extension.sql && rm -f /extension.sql
RUN systemctl enable postgresql

# 사용자 환경 설정
RUN echo 'postgres	ALL=(ALL)	NOPASSWD: ALL' > /etc/sudoers.d/postgres
RUN chmod 440 /etc/sudoers.d/postgres
COPY --chown=postgres:postgres --chmod=644 ubuntu/files/pgsql_profile /var/lib/postgresql/.bash_profile
ADD files/ssh.tar.gz /var/lib/postgresql/.ssh
RUN touch /var/lib/postgresql/.hushlogin && chown -R postgres:postgres /var/lib/postgresql/.hushlogin /var/lib/postgresql/.ssh && chmod 644 /var/lib/postgresql/.hushlogin  && chmod 700 /var/lib/postgresql/.ssh
COPY --chown=postgres:postgres --chmod=755 files/initialize.sh /var/lib/postgresql
RUN su -l postgres -c "echo '@reboot /var/lib/postgresql/initialize.sh >/tmp/initialize.log 2>&1' | crontab"

# Docker 환경 설정
ENV PATH=/var/lib/postgresql/.local/bin:${PATH}
ENV PGDATA=/var/lib/postgresql/15/main PGHOST=localhost PGUSER=experdba PGPASSWORD=experdba PGDATABASE=experdb

# Workspace 설정
ENV GIT_CONFIG_GLOBAL=/var/lib/postgresql/workspace/.gitconfig
COPY --chown=postgres:postgres --chmod=644 ubuntu/files/pgsql_bashrc /var/lib/postgresql/.bashrc
RUN mkdir /var/lib/postgresql/.vscode-server && mkdir /var/lib/postgresql/workspace && mkdir /var/lib/postgresql/workspace/.vscode && mkdir /var/lib/postgresql/workspace/postgres && mkdir /var/lib/postgresql/workspace/pg_store_plans && mkdir /var/lib/postgresql/workspace/pgsentinel && mkdir /var/lib/postgresql/workspace/pg_ensure_queryid
COPY --chown=postgres:postgres --chmod=644 ubuntu/files/gitconfig /var/lib/postgresql/workspace/.gitconfig
COPY --chown=postgres:postgres --chmod=644 files/gitignore /var/lib/postgresql/workspace/.gitignore
COPY --chown=postgres:postgres --chmod=644 ubuntu/files/launch-pg15.json /var/lib/postgresql/workspace/.vscode/launch.json
RUN ( cd /var/lib/postgresql/workspace/postgres && git init && git remote add origin https://github.com/assam258-5892/postgres.git && git remote add upstream https://github.com/postgres/postgres.git )
RUN ( cd /var/lib/postgresql/workspace/pg_store_plans && git init && git remote add origin https://github.com/experdb/pg_store_plans.git && git remote add upstream https://github.com/ossc-db/pg_store_plans.git )
RUN ( cd /var/lib/postgresql/workspace/pgsentinel && git init && git remote add origin https://github.com/experdb/pgsentinel.git && git remote add upstream https://github.com/pgsentinel/pgsentinel.git )
RUN ( cd /var/lib/postgresql/workspace/pg_ensure_queryid && git init && git remote add origin https://github.com/assam258-5892/pg_ensure_queryid.git && git remote add upstream https://github.com/experdb/pg_ensure_queryid.git )
RUN chown -R postgres:postgres /var/lib/postgresql/.vscode-server /var/lib/postgresql/workspace
VOLUME /var/lib/postgresql/workspace
