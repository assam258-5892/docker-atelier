#!/bin/sh

if [ -z "$1" ]; then
  echo "사용 가능한 docker-*.yml 목록:"
  files=$(ls docker-*.yml 2>/dev/null)
  keys=""
  bases=""
  idx=1
  for f in $files; do
    base=${f#docker-}
    base=${base%.yml}
    num=$(echo "$base" | grep -o '[0-9]\+$')
    if [ -n "$num" ]; then
      key="$num"
    else
      key=""
      i=1
      while [ $i -le ${#base} ]; do
        c=$(echo "$base" | cut -c $i | tr 'A-Z' 'a-z')
        if echo "$keys" | grep -qw "$c"; then
          i=$((i+1))
          continue
        fi
        key="$c"
        keys="$keys $c"
        break
      done
      [ -z "$key" ] && key="$base"
    fi
    echo "  $key) $base"
    bases="$bases|$key:$base"
    idx=$((idx+1))
  done
  printf "번호 또는 키/이름을 입력하세요: "
  read sel
  found=""
  for pair in $(echo "$bases" | tr '|' ' '); do
    k=$(echo "$pair" | cut -d: -f1)
    v=$(echo "$pair" | cut -d: -f2-)
    if [ "$sel" = "$k" ]; then
      found="$v"
      break
    fi
  done
  [ -z "$found" ] && found="$sel"
  set -- "$found"
else
  files=$(ls docker-*.yml 2>/dev/null | grep "$1")
  count=$(echo "$files" | wc -w)
  if [ "$count" -eq 1 ]; then
    base=${files#docker-}
    base=${base%.yml}
    set -- "$base"
  elif [ "$count" -gt 1 ]; then
    echo "입력 인자 '$1'를 포함하는 후보 파일:"
    for f in $files; do
      echo "  $f"
    done
    echo "여러 파일이 일치합니다. 정확한 이름을 입력하세요."
    exit 1
  else
    echo "입력 인자 '$1'를 포함하는 docker-*.yml 파일이 없습니다."
    exit 1
  fi
fi

docker compose -f docker-$1.yml up -d --remove-orphans
